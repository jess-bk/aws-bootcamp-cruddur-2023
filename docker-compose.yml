version: "3.8"

services:
  backend-flask:
    env_file:
      - backend-flask.env
    build:
      context: ./backend-flask
      dockerfile: Dockerfile.prod
    ports:
      - "4567:4567"
    volumes:
      - ./backend-flask:/backend-flask
    networks:
      - cruddur-net
    # healthcheck:
    #   test: ["CMD-SHELL", "curl --fail http://localhost:4567/health || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
  frontend-react-js:
    env_file:
      - frontend-react-js.env
    build: ./frontend-react-js
    ports:
      - "3000:3000"
    networks:
      - cruddur-net
    volumes:
      - ./frontend-react-js:/frontend-react-js

  # otel-collector:
  #   environment:
  #     FRONTEND_URL: "https://${CODESPACE_NAME}-3000.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
  #     BACKEND_URL: "https://${CODESPACE_NAME}-4567.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
  #     HONEYCOMB_API_KEY: "${HONEYCOMB_API_KEY}"
  #   image: otel/opentelemetry-collector
  #   command: [--config=/otel-collector-config.yaml]
  #   volumes:
  #     - "./otel-collector-config.yaml:/otel-collector-config.yaml"
  #   ports:
  #     - 4318:4318
  #   networks:
  #     - internal-network

  # custom-proxy:
  #   image: nginx:latest
  #   volumes:
  #     - ./custom-proxy.conf:/custom-proxy.conf
  #   ports:
  #     - "8123:80"
  #   networks:
  #     - internal-network

  xray-daemon:
    image: "amazon/aws-xray-daemon"
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "us-east-1"
    command:
      - "xray -o -b xray-daemon:2000"
    ports:
      - 2000:2000/udp
    networks:
      - cruddur-net

  dynamodb-local:
    # https://stackoverflow.com/questions/67533058/persist-local-dynamodb-data-in-volumes-lack-permission-unable-to-open-databa
    # We needed to add user:root to get this working.
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    networks:
      - cruddur-net
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    # healthcheck:
    #   test:
    #     [
    #       "CMD-SHELL",
    #       "aws dynamodb list-tables --endpoint-url http://localhost:8000",
    #     ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - cruddur-net
    volumes:
      - db:/var/lib/postgresql/data

# the name flag is a hack to change the default prepend folder
# name when outputting the image names
networks:
  cruddur-net:
    driver: bridge
    name: cruddur-net

volumes:
  db:
    driver: local
